//////////////////////////////////////////////////////////////////////////////
// *
// * Predmetni projekat iz predmeta OAiS DSP 2
// * Godina: 2017
// *
// * Zadatak: Ekvalizacija audio signala
// * Autor:
// *                                                                          
// *                                                                          
/////////////////////////////////////////////////////////////////////////////

#include "stdio.h"
#include "ezdsp5535.h"
#include "ezdsp5535_i2c.h"
#include "aic3204.h"
#include "ezdsp5535_aic3204_dma.h"
#include "ezdsp5535_i2s.h"
#include "ezdsp5535_sar.h"
#include "print_number.h"
#include "math.h"

#include "iir.h"
#include "processing.h"

/* Frekvencija odabiranja */
#define SAMPLE_RATE 16000L

#define PI 3.14159265

/* Niz za smestanje ulaznih i izlaznih odbiraka */
#pragma DATA_ALIGN(sampleBufferL,4)
Int16 sampleBufferL[AUDIO_IO_SIZE];
#pragma DATA_ALIGN(sampleBufferR,4)
Int16 sampleBufferR[AUDIO_IO_SIZE];


float alpha[4] = { 0.917134199471548, 0.957709924852467, 0.571691813207928, -0.198912367379725};
float beta[2] = {0.979222810621763, 0.416875796698897};

Int16 k[4] = {8192, 16364. 24576, 32737};


//220 Hz 520 Hz 110 Hz 2905 Hz 1355 Hz 5 kHz

//normalizovane:
// 0.01375  0.0325   0.006875   0.1815625   0.0846875   0.3125

//alpha: 0.917134199471548    0.957709924852467    0.571691813207928     -0.198912367379725
//beta:  0.979222810621763   0.416875796698897

void main( void )
{   

	Int16 lpCoeffs[4];
	Int16 hpCoeffs[4];
	Int16 sh1Coeffs[6];
	Int16 sh2Coeffs[6];

	Int16 h_x_lp = 0;
	Int16 h_y_lp = 0;
	Int16 h_x_hp = 0;
	Int16 h_y_hp = 0;

	Int16 h_x_peek1[2] = {0, 0};
	Int16 h_y_peek1[2] = {0, 0};
	Int16 h_x_peek2[2] = {0, 0};
	Int16 h_y_peek2[2] = {0, 0};


	Int16 k = 8192;
	float c_alpha = 0.3;
	float c_beta = 0.0;
	Int16 coefs[4];
	Int16 coef[6];
	Int16 aa = 0;
	Int16 bb = 0;
	Int16 a[2] = {0,0};
	Int16 b[2] = {0,0};

	int i = 0;

    /* Inicijalizaija razvojne ploce */
    EZDSP5535_init( );

    /* Inicijalizacija kontrolera za ocitavanje vrednosti pritisnutog dugmeta*/
    EZDSP5535_SAR_init();

    /* Inicijalizacija LCD kontrolera */
    initPrintNumber();

	printf("\n Ekvalizacija audio signala \n");
		
    /* Inicijalizacija veze sa AIC3204 kodekom (AD/DA) */
    aic3204_hardware_init();
	
    /* Inicijalizacija AIC3204 kodeka */
	aic3204_init();

    aic3204_dma_init();
    
    /* Postavljanje vrednosti frekvencije odabiranja i pojacanja na kodeku */
    set_sampling_frequency_and_gain(SAMPLE_RATE, 0);

/*
	calculateShelvingCoeff(alpha[0], lpCoeffs);
	calculateShelvingCoeff(alpha[3], hpCoeffs);
	calculatePeekCoeff(alpha[1], beta[0], sh1Coeffs);
	calculatePeekCoeff(alpha[2], beta[1], sh2Coeffs);
*/

	calculatePeekCoeff(c_alpha, c_beta, coef);
	calculateShelvingCoeff(c_alpha, coefs);


    while(1)
    {
    	aic3204_read_block(sampleBufferL, sampleBufferR);

/*
    	for(i = 0; i < AUDIO_IO_SIZE; i++){
    		if(i != 0){
    			sampleBufferR[i] = shelvingLP( 0, coefs, &aa, &bb, k[0]);
    		}
    		else{
    			sampleBufferR[i] = shelvingLP(32767, coefs, &aa, &bb, k[0]);
    		}
    	}
*/
    	/* EKVALIZATOR*/


    	for(i = 0; i < AUDIO_IO_SIZE; i++) {
    		sampleBufferR[i] = shelvingLP(sampleBufferR[i], lpCoeffs, &h_x_lp, &h_y_lp, 0);
    	}
    	for(i = 0; i < AUDIO_IO_SIZE; i++) {
    		sampleBufferR[i] = shelvingPeek(sampleBufferR[i], sh1Coeffs, h_x_peek1, h_y_peek1, 0);
    	}
    	for(i = 0; i < AUDIO_IO_SIZE; i++) {

    		sampleBufferR[i] = shelvingHP(sampleBufferR[i], hpCoeffs, &h_x_hp, &h_y_hp, 0);
    	}
    	for(i = 0; i < AUDIO_IO_SIZE; i++) {


    		sampleBufferR[i] = shelvingPeek(sampleBufferR[i], sh2Coeffs, h_x_peek2, h_y_peek2, 0);

    	}

		aic3204_write_block(sampleBufferL, sampleBufferR);
	}

    	
	/* Prekid veze sa AIC3204 kodekom */
    aic3204_disable();

    printf( "\n***Kraj programa***\n" );
	SW_BREAKPOINT;
}


